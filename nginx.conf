user nginx;
worker_processes 1;

load_module /etc/nginx/modules/ngx_http_vhost_traffic_status_module.so;

events {
    worker_connections 4000;
    multi_accept on;
}


http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    server_tokens off;

    keepalive_timeout 10;
    keepalive_requests 10;

    # to group requests by url
    map $request_uri $url_group {
        "~*^/images" "images";
        default "";
    }

    # to group requests by status
    map $status $status_groups {
        "~2.."   "success";
        "~3.."   "redirect";
        "~4.."   "client_error";
        "~5.."   "server_error";
        default  "none";
    }

    vhost_traffic_status_zone;
    vhost_traffic_status_zone shared:vhost_traffic_status:256m;
    # vhost_traffic_status_dump /var/log/nginx/vts.db;
    # vhost_traffic_status_filter_by_host example.org;
    vhost_traffic_status_filter_by_set_key $status_groups $url_group;

    gzip on;

    # include /etc/nginx/conf.d/*.conf
    server {
        listen 80;
        server_name _;
        location / {
            default_type text/plain;
            return 200 'ALPINE NGINX + VTS STATUS\nbuild https://github.com/akmalovaa/nginx-vts';
        }
        location /images {
            default_type text/plain;
            return 200 'images - example page for count by request uri';
        }
    }

    # metrics port to 9991
    server {
        listen 9991;
        server_name _;

        root /srv/www;
        index index.html;
        location /metrics {
            vhost_traffic_status_bypass_limit on;
            vhost_traffic_status_bypass_stats on;
            vhost_traffic_status_display;
            vhost_traffic_status_display_format prometheus;
        }

        location /vts {
            vhost_traffic_status_bypass_limit on;
            vhost_traffic_status_bypass_stats on;
            vhost_traffic_status_display;
            vhost_traffic_status_display_format html;
        }
    }
}
